<!DOCTYPE html>
<html>
  <head>
    <% include ../partials/head %>

  <script>
      $(document).on('swipeleft', '.ui-page', function(event){    
          if(event.handled !== true) // This will prevent event triggering more then once
          {    
              var nextpage = $.mobile.activePage.next('[data-role="page"]');
              // swipe using id of next page if exists
              if (nextpage.length > 0) {
                  $.mobile.changePage(nextpage, {transition: "slide", reverse: false}, true, true);
              }
              event.handled = true;
          }
          return false;         
      });

      $(document).on('swiperight', '.ui-page', function(event){     
          if(event.handled !== true) // This will prevent event triggering more then once
          {      
              var prevpage = $(this).prev('[data-role="page"]');
              if (prevpage.length > 0) {
                  $.mobile.changePage(prevpage, {transition: "slide", reverse: true}, true, true);
              }
              event.handled = true;
          }
          return false;            
      });

      function initialize() {
        // Try HTML5 geolocation
        if(navigator.geolocation) {
          navigator.geolocation.getCurrentPosition(function(position) {
            var lat = position.coords.latitude;
            var long = position.coords.longitude;

            // TODO: Check out ENV
            var URI = 'http://magdego.de:80/departure-time/location/'
            // var URI = 'http://localhost:3000/departure-time/location/'

            var path = URI + long + '/' + lat;

            jQuery.getJSON( path, fillContent);

          }, function() {
            handleNoGeolocation(true);
          });
        } else {
          // Browser doesn't support Geolocation
          handleNoGeolocation(false);
        }
      }

      function handleNoGeolocation(errorFlag) {
        if (errorFlag) {
          var content = 'Leider können wir ohne deine Location nicht viel anfangen. :/';
        } else {
          var content = 'Dein Browser unterstütz keine Geolocation. Bitte update/wechsel dein Browser/Betriebssystem.';
        }
        $('body').text(content);
      }

      function fillContent(data, textStatus, jqXHR) {
          for(i = 0; i < data.length; i++) {
            createPage(data[i], i);
          }
      }

      function createPage(station, index) {

        if ( typeof station.station_info !== 'undefined') { // FIX!

          var s = '';
          s += '<div data-role="page" id="page' + index + '">';
          s += '<header><a id="link" href="/infos" rel="external">Infos & Impressum</a><h1><img src="icon.svg" alt=""><br/>MagdeGo</h1></header>';

          var stationWithoutMD = station.station_info.replace('Magdeburg, ','');

          s += '<h2>' + stationWithoutMD +'</h2>';
          s += '<table data-role="table" class="fnord-breakpoint"><thead><tr><th>Abfahrt</th><th>Richtung</th><th>Linie</th></tr></thead>';
          s += '<tbody>';
          var lines = station.departure_times;

          for (j = 0; j < lines.length; j++) {

              var directionModified = lines[j].direction.replace('Magdeburg, ', '');
              directionModified = directionModified.replace('/','/<wbr>');
              var departureModified = lines[j].departure;

              var delayInfos = "";
              if ( ! lines[j].delay === false ) {
                var delay = lines[j].delay;
                if (delay.dlm === "0") {
                  delayInfos = '<small><span class="green">+0</span></small>';
                } else {
                  departureModified = delay.dlt;
                  delayInfos = '<small><span class="red">+' + delay.dlm +'</span></small>';
                }

                if( ! delay.status === null ) {
                  delayInfos += ' ' + delay.status;
                }
              }

              // Display minutes until arrival instead of departture time
              var currentDate = new Date();

              var departureDate = new Date();
              var splittedDateInput = departureModified.split(':');

              departureDate.setMinutes(parseInt(splittedDateInput[1]));
              departureDate.setHours(parseInt(splittedDateInput[0]));

              // check if depature day is already next day
              if ( departureDate < currentDate ) {
                departureDate.setDate(departureDate.getDate() + 1); // increment by one day
              }

              var timeDiff = departureDate - currentDate;
              var minutesUntil = Math.floor(timeDiff / 1000 / 60); // convert to from ms to minutes\

              // check if minutes are valid
              if ( minutesUntil < 21 && minutesUntil >= 0) {
                departureModified = minutesUntil + ' min '
              }

              // append infos
              if ( delayInfos.length > 0 ) {
                departureModified += ' ' + delayInfos;
              }
              
              s += '<tr><td>' + departureModified +'</td><td>' + directionModified +'</td><td>' + lines[j].line + '</td></tr>';
          }
          s += '</tbody>';
          s += '</table>';    
          s += '</div>';

          var x = $(s);
          x.appendTo($.mobile.pageContainer);

          // Show First Page
          if( index === 0 ) {
            $.mobile.changePage( x );
          }
        }
      }

      $(function() {
        initialize();
      });

      // Navigating with Keyboards
      $(document).keydown(function(event){    
        var key = event.which;                
        switch(key) {
          case 39:
            // right
            var nextpage = $.mobile.activePage.next('[data-role="page"]');
            if (nextpage.length > 0) {
              $.mobile.changePage(nextpage, {transition: "slide", reverse: false}, true, true);
            }
            break;
          case 37:
            // left
            var prevpage = $.mobile.activePage.prev('[data-role="page"]');
            if (prevpage.length > 0) {
              $.mobile.changePage(prevpage, {transition: "slide", reverse: true}, true, true);
            }
            break;
        }   
      });

    </script>
  </head>
  <body>
  </body>
</html>